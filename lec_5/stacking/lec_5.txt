// SPDX-License-Identifier: MIT
// Compatible with OpenZeppelin Contracts ^5.0.0
pragma solidity ^0.8.22;

import {ERC20} from "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract MyToken is ERC20 {
    constructor(address recipient) ERC20("MyToken", "MTK") {
        _mint(recipient, 10000 * 10**decimals());
    }
}

contract stacked {
    MyToken public myToken;
    address private owner;
    mapping(address => uint256) stackedAmount;

    constructor(address tokenAddress) {
        myToken = MyToken(tokenAddress); // Initialize MyToken contract instance
        owner = msg.sender;
    }

    function stack(uint256 amount) public returns (bool) {
        require(amount > 0, "Please Enter Amount");
        stackedAmount[msg.sender] += amount;
        myToken.transfer(msg.sender, amount);
        return true;
    }
}
